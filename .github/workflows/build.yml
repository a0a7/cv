name: Build LaTeX document
on: [push]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
      
      - name: Generate LaTeX data from YAML
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing root directory:"
          ls -la
          echo "Checking if data.yaml exists:"
          ls -la data.yaml || echo "data.yaml not found!"
          
          echo "Generating CV data..."
          cd ./src/cv
          echo "In CV directory: $(pwd)"
          ls -la
          python yaml_to_latex.py ../../data.yaml cv > cvdata.tex
          echo "CV data generated, checking cvdata.tex:"
          ls -la cvdata.tex
          head -5 cvdata.tex
          cd ../../
            echo "Generating cover letter data..."
          cd ./src/cover-letter
          echo "In cover letter directory: $(pwd)"
          ls -la
          python yaml_to_latex.py ../../data.yaml cover-letter > coverletterdata.tex
          echo "Cover letter data generated, checking coverletterdata.tex:"
          ls -la coverletterdata.tex
          head -5 coverletterdata.tex
          cd ../../
          
          echo "Final check - listing all generated files:"
          echo "CV directory:"
          ls -la ./src/cv/cvdata.tex
          echo "Cover letter directory:"
          ls -la ./src/cover-letter/coverletterdata.tex
      
      - name: Compile CV LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          working_directory: ./src/cv/
          latexmk_use_xelatex: true
          latexmk_shell_escape: true
          extra_fonts: ../../static/font/*.otf
      
      - name: Compile Cover Letter LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          working_directory: ./src/cover-letter/
          latexmk_use_xelatex: true
          latexmk_shell_escape: true
          extra_fonts: ../../static/font/*.otf
      
      - name: Upload PDF file
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: |
            ./src/cv/main.pdf
            ./src/cover-letter/main.pdf
      
      - name: Prepare files for GitHub Pages
        run: |
          mkdir -p ./public
          cp ./src/cv/main.pdf ./public/cv.pdf
          cp ./src/cover-letter/main.pdf ./public/cover-letter.pdf
          echo "Files prepared for GitHub Pages:"
          ls -la ./public/
      
      - name: Update README with PDF links
        run: |
          # Get the repository owner and name
          REPO_OWNER="${GITHUB_REPOSITORY%/*}"
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          
          # Define the URLs for the hosted PDFs
          CV_URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/cv.pdf"
          COVER_LETTER_URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/cover-letter.pdf"
          
          # Update README with the PDF links
          sed -i "s|## Usage|## Downloads\n\nðŸ“„ **[Download CV (PDF)](${CV_URL})**\n\nðŸ“„ **[Download Cover Letter (PDF)](${COVER_LETTER_URL})**\n\n## Usage|" README.md
          
          echo "Updated README with PDF links:"
          echo "CV URL: ${CV_URL}"
          echo "Cover Letter URL: ${COVER_LETTER_URL}"
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          
      - name: Commit updated README
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update README with hosted PDF links [skip ci]"
            git push